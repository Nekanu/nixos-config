stages:
  - test
  - build

# Run nix flake check to ensure that the flake is valid
flake-check:
  stage: test
  # Run this job only on commits to main
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: never
  image: nixos/nix:latest
  script:
    - nix flake check --extra-experimental-features 'nix-command flakes'

# Run nix flake update to update the flake.lock file
# Run this job only on scheduled pipeline runs and manual triggers
flake-update:
  stage: build
  image: nixos/nix:latest
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      when: manual
    - if: $CI_PIPELINE_SOURCE == "schedule" || $CI_PIPELINE_SOURCE == "web"
      when: always
  script:
    - nix flake update --extra-experimental-features 'nix-command flakes'

    # Configure git
    - git config --global user.email "nix-update.development@nekanu.com"
    - git config --global user.name "Nix-Update-Bot"
    - git remote set-url --push origin "https://$TOKEN_NAME:$ACCESS_TOKEN@gitlab.com/$CI_PROJECT_PATH.git"

    # Commit the updated flake.lock file
    - git add flake.lock
    - git commit -m "Update flake.lock"
    - git push origin HEAD:main -o merge_request.create -o merge_request.target=main -o merge_request.title="Update flake.lock" -o merge_request.labels="dependencies,automated" -o ci.skip

